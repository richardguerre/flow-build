import{j as t}from"./index-b60f1d3d.js";import{d as x}from"./index-d3fc9829.js";const h=x(r=>{const d=r.components,{motion:m}=r.framerMotion,l=r.React,u=5,y=e=>(l.useEffect(()=>{const a=setTimeout(e.onNext,u*1e3);return()=>clearTimeout(a)},[]),t.jsx("div",{className:"flex h-screen w-full items-center justify-center bg-background-100",onClick:e.onNext,children:t.jsx(m.div,{className:"text-6xl font-semibold",animate:{opacity:[0,1,0]},transition:{duration:u,times:[0,.7,1]},children:e.children})}));return{name:"Essentials",routineSteps:{"intro-to-yesterday":{name:"Intro to yesterday",description:"Animated screen to get you in the mood to retrospect on yesterday.",component:e=>t.jsx(y,{...e,children:"Yesterday"})},"retro-on-yesterday":{name:"Retro on yesterday",description:"Retro on yesterday by writing down a note. The default template is a list of tasks you did yesterday, and headers for what went well and what didn't go well.",component:e=>{const[a,n]=l.useState(null),s=r.dayjs().subtract(1,"day");return l.useEffect(()=>{(async()=>{const o=await r.getDays({from:s.toDate(),to:s.toDate(),include:{tasks:!0}});if(!o.length){n("");return}const c=o[0];n(`<ul>${c.tasks.map(i=>`<li><p>${i.status==="DONE"?"✅":i.status==="CANCELED"?"❌":"⏳"} ${i.title}</p></li>`).join("")}</ul>`)})()},[]),t.jsx("div",{className:"w-full flex flex-col items-center",children:t.jsxs("div",{className:"flex flex-col items-start mt-36 w-2xl",children:[t.jsx("h1",{className:"font-semibold text-3xl",children:"Reflect on what you did yesterday"}),t.jsx(d.NoteEditor,{slug:`flow-essentials_retro-${s.format("YYYY-MM-DD")}`,title:`Retro of ${s.format("MMMM D")}`,loading:a===null,initialValue:a??""}),t.jsxs("div",{className:"flex gap-2",children:[t.jsx(e.BackButton,{}),t.jsx(e.NextButton,{})]})]})})}},"intro-to-today":{name:"Intro to today",description:"Animated screen to get you in the mood to plan for today.",component:e=>t.jsx(y,{...e,children:"Today"})},"plan-for-today":{name:"Plan for today",description:"Plan for today by dragging items from your different lists into today's list.",component:e=>{const a=r.dayjs(),[n,s]=r.hooks.useAsyncLoader(async()=>await r.getDays({from:a.toDate(),to:a.toDate(),toRender:{Day:!0}})),o=n==null?void 0:n[0];return s?t.jsx(t.Fragment,{children:"Loading..."}):t.jsxs("div",{children:[t.jsxs("div",{children:[t.jsx(e.BackButton,{}),t.jsx(e.NextButton,{})]}),t.jsx(d.Day,{day:o,label:"Today"})]})}},"today-tomorrow-next-week":{name:"Today, tomorrow, next week",description:"Choose to move tasks from today to tomorrow or next week if you have too many.",component:e=>{const a=r.dayjs(),n=a.add(1,"day"),s=a.weekday(7),[o,c]=r.hooks.useAsyncLoader(async()=>await r.getDaysMax10({dates:[a.toDate(),n.toDate(),s.toDate()],toRender:{Day:!0}}));return c?t.jsx(t.Fragment,{children:"Loading..."}):t.jsxs("div",{children:[t.jsxs("div",{children:[t.jsx(e.BackButton,{}),t.jsx(e.NextButton,{})]}),t.jsxs("div",{className:"flex",children:[t.jsx(d.Day,{day:o==null?void 0:o[0],label:"Today"}),t.jsx(d.Day,{day:o==null?void 0:o[1],label:"Tomorrow"}),t.jsx(d.Day,{day:o==null?void 0:o[2],label:"Next week"})]})]})}},"todays-plan":{name:"Today's plan",description:"Write down your plan for today so you can share it with others. By default, it's a list of tasks you plan to do today.",component:e=>{const[a,n]=l.useState(null),s=r.dayjs();return l.useEffect(()=>{(async()=>{const o=await r.getDays({from:s.toDate(),to:s.toDate(),include:{tasks:!0}});if(!o.length){n("");return}const c=o[0];n(`<ul>${c.tasks.map(i=>`<li>${i.status==="DONE"?"✅ ":i.status==="CANCELED"?"❌ ":""}${i.title}</li>`).join("")}</ul>`)})()},[]),t.jsxs("div",{children:[t.jsx(d.NoteEditor,{slug:`flow-essentials_retro-${s.format("YYYY-MM-DD")}`,title:`Plan for ${s.format("MMMM D")}`,loading:a===null,initialValue:a??""}),t.jsx(e.BackButton,{}),t.jsx(e.NextButton,{})]})}},"intro-to-todays-shutdown":{name:"Intro to today's shutdown",description:"Animated screen to get you in the mood to shutdown and retrospect on today.",component:e=>t.jsx(y,{...e,children:"Let's reflect on what you did today"})},"clean-up-today":{name:"Clean up today",description:"Clean up today by marking tasks as done or canceling tasks.",component:e=>{const a=r.dayjs(),[n,s]=r.hooks.useAsyncLoader(async()=>await r.getDays({from:a.toDate(),to:a.toDate(),toRender:{Day:!0}})),o=n==null?void 0:n[0];return s?t.jsx(t.Fragment,{children:"Loading..."}):t.jsxs("div",{children:[t.jsxs("div",{children:[t.jsx(e.BackButton,{}),t.jsx(e.NextButton,{})]}),t.jsx(d.Day,{day:o,label:"Today"})]})}},"retro-on-today":{name:"Retro on today",description:"Retro on today by writing down a note. The default template is a list of tasks you did today, and headers for what went well and what didn't go well.",component:e=>{const[a,n]=l.useState(null),s=r.dayjs();return l.useEffect(()=>{(async()=>{const o=await r.getDays({from:s.toDate(),to:s.toDate(),include:{tasks:!0}});if(!o.length){n("");return}const c=o[0];n(`<ul>${c.tasks.map(i=>`<li>${i.status==="DONE"?"✅ ":i.status==="CANCELED"?"❌ ":""}${i.title}</li>`).join("")}</ul>`)})()},[]),t.jsxs("div",{children:[t.jsx(d.NoteEditor,{slug:`flow-essentials_retro-${s.format("YYYY-MM-DD")}`,title:`Retro of ${s.format("MMMM D")}`,loading:a===null,initialValue:a??""}),t.jsx(e.BackButton,{}),t.jsx(e.NextButton,{})]})}},"intro-to-tomorrow":{name:"Intro to tomorrow",description:"Animated screen to get you in the mood to plan for tomorrow.",component:e=>t.jsx(y,{...e,children:"Tomorrow"})},"plan-for-tomorrow":{name:"Plan for tomorrow",description:"Plan for tomorrow by dragging items from your different lists into tomorrow's list.",component:e=>{const a=r.dayjs().add(1,"day"),[n,s]=r.hooks.useAsyncLoader(async()=>await r.getDays({from:a.toDate(),to:a.toDate(),toRender:{Day:!0}})),o=n==null?void 0:n[0];return s?t.jsx(t.Fragment,{children:"Loading..."}):t.jsxs("div",{children:[t.jsxs("div",{children:[t.jsx(e.BackButton,{}),t.jsx(e.NextButton,{})]}),t.jsx(d.Day,{day:o,label:"Tomorrow"})]})}}}}});export{h as default};
