import{j as t,c as d,ai as m}from"./index-e40f1048.js";import{d as h}from"./index-d3fc9829.js";const k=h(i=>{const l=i.components,{motion:w}=i.framerMotion,c=i.React,f=5,u=e=>(c.useEffect(()=>{const a=setTimeout(e.onNext,f*1e3);return()=>clearTimeout(a)},[]),t("div",{className:"flex h-screen w-screen items-center justify-center bg-gray-100",onClick:e.onNext,children:t(w.div,{className:"text-6xl font-semibold",animate:{opacity:[0,1,0]},transition:{duration:f,times:[0,.7,1]},children:e.children})}));return{name:"Essentials",routineSteps:{"intro-to-yesterday":{name:"Intro to yesterday",description:"Animated screen to get you in the mood to retrospect on yesterday.",component:e=>t(u,{...e,children:"Yesterday"})},"retro-on-yesterday":{name:"Retro on yesterday",description:"Retro on yesterday by writing down a note. The default template is a list of tasks you did yesterday, and headers for what went well and what didn't go well.",component:e=>{const[a,n]=c.useState(null),r=i.dayjs().subtract(1,"day");return c.useEffect(()=>{(async()=>{const o=await i.getDays({from:r.toDate(),to:r.toDate(),include:{tasks:!0}});if(!o.length){n("");return}const y=o[0];n(`<ul>${y.tasks.map(s=>`<li>${s.status==="DONE"?"✅":s.status==="CANCELED"?"❌":"⏳"} ${s.title}</li>`).join("")}</ul>`)})()},[]),d("div",{children:[t(l.NoteEditor,{slug:`flow-essentials_retro-${r.format("YYYY-MM-DD")}`,title:`Retro of ${r.format("MMMM D")}`,loading:a===null,initialValue:a??""}),t(e.BackButton,{}),t(e.NextButton,{})]})}},"intro-to-today":{name:"Intro to today",description:"Animated screen to get you in the mood to plan for today.",component:e=>t(u,{...e,children:"Today"})},"plan-for-today":{name:"Plan for today",description:"Plan for today by dragging items from your different lists into today's list.",component:e=>{const a=i.dayjs(),[n,r]=i.hooks.useAsyncLoader(async()=>await i.getDays({from:a.toDate(),to:a.toDate(),toRender:{Day:!0}})),o=n==null?void 0:n[0];return r?t(m,{children:"Loading..."}):d("div",{children:[d("div",{children:[t(e.BackButton,{}),t(e.NextButton,{})]}),t(l.Day,{day:o,label:"Today"})]})}},"today-tomorrow-next-week":{name:"Today, tomorrow, next week",description:"Choose to move tasks from today to tomorrow or next week if you have too many.",component:e=>{const a=i.dayjs(),n=a.add(1,"day"),r=a.weekday(7),[o,y]=i.hooks.useAsyncLoader(async()=>await i.getDaysMax10({dates:[a.toDate(),n.toDate(),r.toDate()],toRender:{Day:!0}}));return y?t(m,{children:"Loading..."}):d("div",{children:[d("div",{children:[t(e.BackButton,{}),t(e.NextButton,{})]}),d("div",{className:"flex",children:[t(l.Day,{day:o==null?void 0:o[0],label:"Today"}),t(l.Day,{day:o==null?void 0:o[1],label:"Tomorrow"}),t(l.Day,{day:o==null?void 0:o[2],label:"Next week"})]})]})}},"todays-plan":{name:"Today's plan",description:"Write down your plan for today so you can share it with others. By default, it's a list of tasks you plan to do today.",component:e=>{const[a,n]=c.useState(null),r=i.dayjs();return c.useEffect(()=>{(async()=>{const o=await i.getDays({from:r.toDate(),to:r.toDate(),include:{tasks:!0}});if(!o.length){n("");return}const y=o[0];n(`<ul>${y.tasks.map(s=>`<li>${s.status==="DONE"?"✅ ":s.status==="CANCELED"?"❌ ":""}${s.title}</li>`).join("")}</ul>`)})()},[]),d("div",{children:[t(l.NoteEditor,{slug:`flow-essentials_retro-${r.format("YYYY-MM-DD")}`,title:`Plan for ${r.format("MMMM D")}`,loading:a===null,initialValue:a??""}),t(e.BackButton,{}),t(e.NextButton,{})]})}},"intro-to-todays-shutdown":{name:"Intro to today's shutdown",description:"Animated screen to get you in the mood to shutdown and retrospect on today.",component:e=>t(u,{...e,children:"Let's reflect on what you did today"})},"clean-up-today":{name:"Clean up today",description:"Clean up today by marking tasks as done or canceling tasks.",component:e=>{const a=i.dayjs(),[n,r]=i.hooks.useAsyncLoader(async()=>await i.getDays({from:a.toDate(),to:a.toDate(),toRender:{Day:!0}})),o=n==null?void 0:n[0];return r?t(m,{children:"Loading..."}):d("div",{children:[d("div",{children:[t(e.BackButton,{}),t(e.NextButton,{})]}),t(l.Day,{day:o,label:"Today"})]})}},"retro-on-today":{name:"Retro on today",description:"Retro on today by writing down a note. The default template is a list of tasks you did today, and headers for what went well and what didn't go well.",component:e=>{const[a,n]=c.useState(null),r=i.dayjs();return c.useEffect(()=>{(async()=>{const o=await i.getDays({from:r.toDate(),to:r.toDate(),include:{tasks:!0}});if(!o.length){n("");return}const y=o[0];n(`<ul>${y.tasks.map(s=>`<li>${s.status==="DONE"?"✅ ":s.status==="CANCELED"?"❌ ":""}${s.title}</li>`).join("")}</ul>`)})()},[]),d("div",{children:[t(l.NoteEditor,{slug:`flow-essentials_retro-${r.format("YYYY-MM-DD")}`,title:`Retro of ${r.format("MMMM D")}`,loading:a===null,initialValue:a??""}),t(e.BackButton,{}),t(e.NextButton,{})]})}},"intro-to-tomorrow":{name:"Intro to tomorrow",description:"Animated screen to get you in the mood to plan for tomorrow.",component:e=>t(u,{...e,children:"Tomorrow"})},"plan-for-tomorrow":{name:"Plan for tomorrow",description:"Plan for tomorrow by dragging items from your different lists into tomorrow's list.",component:e=>{const a=i.dayjs().add(1,"day"),[n,r]=i.hooks.useAsyncLoader(async()=>await i.getDays({from:a.toDate(),to:a.toDate(),toRender:{Day:!0}})),o=n==null?void 0:n[0];return r?t(m,{children:"Loading..."}):d("div",{children:[d("div",{children:[t(e.BackButton,{}),t(e.NextButton,{})]}),t(l.Day,{day:o,label:"Tomorrow"})]})}}}}});export{k as default};
